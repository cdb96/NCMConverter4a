name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    - name: 设置JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: 设置Android SDK和NDK
      uses: android-actions/setup-android@v3

    - name: 给Gradlew授予执行权限
      run: chmod +x gradlew
      
    - name: 缓存Gradle依赖
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: 设置Keystore文件
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > app/release.keystore

    - name: 构建发布版APK
      if: ${{ github.event_name != 'pull_request' }}
      run: ./gradlew assembleRelease
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        SIGNING_STORE_FILE: release.keystore
  
    - name: 上传APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: 创建 GitHub Release
      if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/app-release.apk
